{"version":3,"sources":["themes/light_theme.js","themes/dark_theme.js","components/Button/ThemeButton.jsx","components/container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["colors","background","buttonBackground","color","buttonColor","ThemeButton","props","class","type","onClick","toggleTheme","styled","div","theme","App","useState","isDarkMode","setIsDarkMode","darkTheme","lighttheme","className","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"yNAQeA,EAPC,CACRC,WAAY,aACZC,iBAAkB,QAClBC,MAAO,QACPC,YAAa,SCGNJ,EAPC,CACZC,WAAY,QACZC,iBAAkB,QAClBC,MAAO,QACPC,YAAa,S,eC4BAC,I,EAAAA,EA5BjB,SAAqBC,GAgBjB,OACE,8BACE,wBAAOC,MAAM,gBAAb,UACE,uBAAOC,KAAK,WAAWC,QAASH,EAAMI,cACtC,qBAAKH,MAAM,gBAAX,SACE,qBAAKA,MAAM,wB,OCxBRI,MAAOC,IAAtB,4PACgB,SAAAN,GAAK,OAAIA,EAAMO,MAAMZ,cAC1B,SAAAK,GAAK,OAAIA,EAAMO,MAAMV,S,MC4BjBW,MAnBf,WAAgB,IAAD,EAEuBC,oBAAS,GAFhC,mBAENC,EAFM,KAEMC,EAFN,KAQb,OACE,cAAC,IAAD,CAAeJ,MAAOG,EAAaE,EAAYC,EAA/C,SACE,qBAAKC,UAAU,MAAf,SACE,cAACC,EAAD,UACE,cAAC,EAAD,CAAaX,YARD,WAClBO,GAAeD,aCNJM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,O","file":"static/js/main.00420df3.chunk.js","sourcesContent":["\r\nconst colors =  {\r\n        background: 'whitesmoke',\r\n        buttonBackground: 'white',\r\n        color: 'black',\r\n        buttonColor: 'black'\r\n    }\r\n\r\nexport default colors;","\r\nconst colors =  {\r\n    background: 'black',\r\n    buttonBackground: 'black',\r\n    color: 'white',\r\n    buttonColor: 'white'\r\n}\r\n\r\nexport default colors;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport './themebutton.scss'\r\n\r\n  \r\nfunction ThemeButton(props) {\r\n\r\n  //   const button = styled.button`\r\n  //   background: ${props => props.theme.buttonBackground};\r\n  //   color: ${props => props.theme.buttonColor};\r\n  //   display: block;\r\n  //   margin-top: 24px;\r\n  //   max-width: 100%;\r\n  //   border: 1px solid ${props => props.theme.buttonColor};\r\n  //   line-height: 36px;\r\n  //   padding: 0 12px;\r\n  //   border-radius: 4px;\r\n  //   font-size: 14px;\r\n  //   cursor: pointer;\r\n  // `;\r\n\r\n    return (\r\n      <div>\r\n        <label class=\"toggle-switch\">\r\n          <input type=\"checkbox\" onClick={props.toggleTheme}/>\r\n          <div class=\"toggle-button\">\r\n            <div class=\"toggle-icon\"></div>\r\n          </div>\r\n        </label>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default ThemeButton;\r\n  ","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  background: ${props => props.theme.background};\r\n  color: ${props => props.theme.color};\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  transition: 1s cubic-bezier(0.65, 0.39, 0.22, 0.69);\r\n`;","import { useState } from 'react';\n\nimport { ThemeProvider } from \"styled-components\";\n\nimport lighttheme from \"./themes/light_theme\";\nimport darkTheme from \"./themes/dark_theme\";\nimport ThemeButton from \"./components/Button/ThemeButton\";\nimport Container from \"./components/container/Container\";\n\nimport './main.css';\n\n\n\nfunction App() {\n\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode)\n  }\n\n  return (\n    <ThemeProvider theme={isDarkMode ? darkTheme : lighttheme}>\n      <div className=\"App\">\n        <Container>\n          <ThemeButton toggleTheme={toggleTheme}/>\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}